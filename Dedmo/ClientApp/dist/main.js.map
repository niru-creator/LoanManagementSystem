{"version":3,"sources":["./src/app/LoanApplicationForm/loan-application-form.component.html","./src/app/LoanAppliedList/Loan-Applied-List.component.html","./src/app/app.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/ENUM/shared_enum.ts","./src/app/LoanApplicationForm/loan-application-form.component.ts","./src/app/LoanAppliedList/Loan-Applied-list.component.ts","./src/app/Model/LoanApplication.model.ts","./src/app/Model/Role.model.ts","./src/app/Model/User.model.ts","./src/app/Services/loan-service.ts","./src/app/Services/loan.bl.service.ts","./src/app/Services/loan.dl.service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/login/login.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h3>Apply For Loan</h3>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"OnClickAppliedLoanDetail()\\\">Applied Loan Details</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <!-- Reactive Form -->\\r\\n    <form [formGroup]=\\\"loanApplication.LoanValidator\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputName\\\">Name:<b class=\\\"color-red\\\">*</b></label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"customer_name\\\" aria-describedby=\\\"customer\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"loanApplication.CustomerName\\\" formControlName=\\\"CustomerName\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"loanApplication.IsDirty('CustomerName')\\\" [hidden]=\\\"loanApplication.IsValidCheck('CustomerName','required')\\\"> Name is required</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputEmail\\\">Email:<b class=\\\"color-red\\\">*</b></label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"loanApplication.Email\\\" formControlName=\\\"Email\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"loanApplication.IsDirty('Email')\\\" [hidden]=\\\"loanApplication.IsValidCheck('Email','required')\\\"> Email is required</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputContact\\\">Contact:<b class=\\\"color-red\\\">*</b></label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputContact\\\" placeholder=\\\"Contact\\\" [(ngModel)]=\\\"loanApplication.Contact\\\" formControlName=\\\"Contact\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"loanApplication.IsDirty('Contact')\\\" [hidden]=\\\"loanApplication.IsValidCheck('Contact','required')\\\"> Contact is required</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputLoanAmount\\\">Loan Amount:<b class=\\\"color-red\\\">*</b></label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"exampleInputLoanAmount\\\" placeholder=\\\"Loan Amount\\\" [(ngModel)]=\\\"loanApplication.LoanAmount\\\" formControlName=\\\"LoanAmount\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"loanApplication.IsDirty('LoanAmount')\\\" [hidden]=\\\"loanApplication.IsValidCheck('LoanAmount','required')\\\"> Loan Amount is required</span>\\r\\n            <span class=\\\"color-red font-sm\\\" *ngIf=\\\"loanApplication.IsDirty('LoanAmount')\\\" [hidden]=\\\"loanApplication.IsValidCheck('LoanAmount','positivenum')\\\"> Loan Amount Should Not Be Negative</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputLoanPeriod\\\">Loan Period (in Years):<b class=\\\"color-red\\\">*</b></label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"exampleInputLoanPeriod\\\" placeholder=\\\"Loan Period\\\" [(ngModel)]=\\\"loanApplication.LoanPeriod\\\" formControlName=\\\"LoanPeriod\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"loanApplication.IsDirty('LoanPeriod')\\\" [hidden]=\\\"loanApplication.IsValidCheck('LoanPeriod','required')\\\"> Loan Period is required</span>\\r\\n            <span class=\\\"color-red font-sm\\\" *ngIf=\\\"loanApplication.IsDirty('LoanPeriod')\\\" [hidden]=\\\"loanApplication.IsValidCheck('LoanPeriod','positivenum')\\\"> Loan Period Should Not Be Negative</span>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SubmitApplicationForm()\\\">Submit</button>\\r\\n    </form>\\r\\n</div>\\r\\n<app-loan-applied-list *ngIf=\\\"showAppliedLoansStatus\\\"></app-loan-applied-list>\"","export default \"<h1 id=\\\"tableLabel\\\">Loan List</h1>\\r\\n<div>\\r\\n  <table class='table' aria-labelledby=\\\"tableLabel\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>S.No.</th>\\r\\n        <th>Customer Name</th>\\r\\n        <th>Customer Address</th>\\r\\n        <th>Email</th>\\r\\n        <th>Loan Amount</th>\\r\\n        <th>Loan Period</th>\\r\\n        <th>Application Date</th>\\r\\n        <th>Loan Status</th>\\r\\n        <th *ngIf=\\\"userRole == admin_enum\\\">Action</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let loan of loansApplied;let i= index\\\">\\r\\n        <td>{{i+1}}</td>\\r\\n        <td>{{loan.CustomerName}}</td>\\r\\n        <td>{{loan.Address}}</td>\\r\\n        <td>{{loan.Email}}</td>\\r\\n        <td>{{loan.LoanAmount}}</td>\\r\\n        <td>{{loan.LoanPeriod}}</td>\\r\\n        <td>{{loan.ApplicationDate | date:'yyyy-MM-dd'}}</td>\\r\\n        <td>{{loan.Status}}</td>\\r\\n        <td *ngIf=\\\"userRole == admin_enum\\\">\\r\\n          <button class=\\\"btn-primary\\\" (click)=\\\"Approve(loan)\\\" [disabled]=\\\"loan.IsApprovedDisabled\\\">Approve</button><br>\\r\\n          <button class=\\\"btn-danger\\\" (click)=\\\"Reject(loan)\\\" [disabled]=\\\"loan.IsRejectedDisabled\\\">Reject</button>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"","export default \"<body>\\r\\n  <!-- <app-nav-menu></app-nav-menu> -->\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<div *ngIf=\\\"loanService.RoleName == client_enum\\\">\\r\\n  <div class=\\\"Container\\\">\\r\\n    <br>\\r\\n    <h2>Welcome &nbsp;{{loanService.UserName}}</h2>\\r\\n    <br>\\r\\n    <app-loan-application [userRole]=\\\"loanService.RoleName\\\"></app-loan-application>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"loanService.RoleName == admin_enum\\\">\\r\\n  <div class=\\\"Container\\\">\\r\\n    <br>\\r\\n    <h2>Welcome &nbsp;{{loanService.UserName}}</h2>\\r\\n    <br>\\r\\n    <app-loan-applied-list [userRole]=\\\"loanService.RoleName\\\"></app-loan-applied-list>\\r\\n  </div>\\r\\n</div>\"","export default \"<br />\\r\\n<div>Login</div>\\r\\n<br />\\r\\n<div class=\\\"Container\\\">\\r\\n    <!-- Reactive Form -->\\r\\n    <form [formGroup]=\\\"user.userValidator\\\">\\r\\n        <div>\\r\\n            UserName:<b class=\\\"color-red\\\">*</b> <input type=\\\"text\\\" [(ngModel)]=\\\"user.UserName\\\" formControlName=\\\"UserName\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"user.IsDirty('UserName')\\\" [hidden]=\\\"user.IsValidCheck('UserName','required')\\\"> UserName is required</span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div>\\r\\n            Password:<b class=\\\"color-red\\\">*</b> <input type=\\\"password\\\" [(ngModel)]=\\\"user.Password\\\" formControlName=\\\"Password\\\">\\r\\n            <span style=\\\"color:red\\\" *ngIf=\\\"user.IsDirty('Password')\\\" [hidden]=\\\"user.IsValidCheck('Password','required')\\\"> Password is required</span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" (click)=\\\"PostLoginForm()\\\">\\r\\n    </form>\\r\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export enum ENUM_Role {\r\n    Client = \"Client\",\r\n    Admin = \"Admin\"\r\n}","import { Component, Input } from \"@angular/core\";\r\nimport { LoanApplication } from \"../Model/LoanApplication.model\";\r\nimport { LoanBLService } from \"../Services/loan.bl.service\";\r\n\r\n@Component({\r\n    selector: 'app-loan-application',\r\n    templateUrl: './loan-application-form.component.html',\r\n})\r\nexport class LoanApplicationFormComponent {\r\n    loanApplication: LoanApplication = new LoanApplication();\r\n    user: string;\r\n    userId: number;\r\n    @Input(\"userRole\")\r\n    userRole: string = null;\r\n    showAppliedLoansStatus: boolean = false;\r\n    constructor(public loanBlService: LoanBLService) {\r\n        try {\r\n            this.user = localStorage.getItem('UserId'); // To get the UserId of current logged-In User\r\n            this.userId = parseInt(this.user);\r\n        }\r\n        catch (e) {\r\n            alert(e.toString());\r\n        }\r\n    }\r\n    //event handling\r\n    SubmitApplicationForm() {\r\n        for (var i in this.loanApplication.LoanValidator.controls) {\r\n            this.loanApplication.LoanValidator.controls[i].markAsDirty();\r\n            this.loanApplication.LoanValidator.controls[i].updateValueAndValidity();\r\n        }\r\n        if (this.loanApplication.IsValidCheck(undefined, undefined)) {\r\n            this.loanApplication.CreatedBy = this.userId;\r\n            this.loanBlService.PostLoan(this.loanApplication)\r\n                .subscribe(res => {\r\n                    if (res.Status == 'OK') {\r\n                        alert('Loan Applied Successfully!');\r\n                        this.loanApplication = new LoanApplication();\r\n                        this.OnClickAppliedLoanDetail();\r\n                    }\r\n                    else {\r\n                        alert('Sorry! Application Failed To Apply Loan, Try Again');\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    //event handling\r\n    OnClickAppliedLoanDetail() {\r\n        this.showAppliedLoansStatus = true;\r\n    }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { LoanBLService } from '../Services/loan.bl.service';\r\nimport { LoanApplication } from '../Model/LoanApplication.model';\r\nimport { ENUM_Role } from '../ENUM/shared_enum';\r\n\r\n@Component({\r\n  selector: 'app-loan-applied-list',\r\n  templateUrl: './Loan-Applied-List.component.html'\r\n})\r\nexport class LoanAppliedListComponent {\r\n\r\n  loansApplied: Array<LoanApplication> = new Array<LoanApplication>();\r\n  loanApplication: LoanApplication = new LoanApplication();\r\n\r\n  //It receives data from its parent i.e. home component\r\n  @Input(\"userRole\")\r\n  userRole: string = null;\r\n  admin_enum: string = ENUM_Role.Admin;\r\n  user: string = null;\r\n  userId: number = null;\r\n  isApproveButtonDisable: boolean = false;\r\n  isRejectButtonDisable: boolean = false;\r\n  constructor(public loanBLService: LoanBLService\r\n  ) {\r\n    this.getAllAppliedLoans();\r\n    try {\r\n      this.user = localStorage.getItem('UserId'); // To get the UserId of current logged-In User\r\n      this.userId = parseInt(this.user);\r\n    }\r\n    catch (e) {\r\n      alert(e.toString());\r\n    }\r\n  }\r\n  public getAllAppliedLoans() {\r\n    this.loanBLService.getAllLoansApplications().subscribe((res) => {\r\n      if (res.Status === 'OK') {\r\n        this.loansApplied = res.Results;\r\n        this.loansApplied = this.loansApplied.slice();\r\n        this.loansApplied.forEach(loan => {\r\n          if (loan.Status == \"Approved\") {\r\n            loan.IsApprovedDisabled = true;\r\n            loan.IsRejectedDisabled = true;\r\n          }\r\n          else\r\n            loan.IsRejectedDisabled = true;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  //Event handling\r\n  Reject($event) {\r\n    this.loanBLService.rejectApplication(this.userId, $event.LoanApplicationId).subscribe((res) => {\r\n      if (res.Status === 'OK') {\r\n        this.isRejectButtonDisable = true;\r\n        this.OnStatusChanged(res);\r\n        alert(\"Successfully Rejected Loan\");\r\n      }\r\n    });\r\n  }\r\n  Approve($event) {\r\n    this.loanBLService.approveApplication(this.userId, $event.LoanApplicationId).subscribe((res) => {\r\n      if (res.Status === 'OK') {\r\n        this.isApproveButtonDisable = true;\r\n        this.OnStatusChanged(res);\r\n        alert(\"Successfully Approved Loan\");\r\n      }\r\n      else\r\n        alert(\"Failed To Approved Loan, Try Again!\");\r\n    });\r\n  }\r\n  //Code Reusability for handling the Status \r\n  OnStatusChanged(res) {\r\n    if (res.Status === 'OK') {\r\n      this.loanApplication = res.Results;\r\n      this.loansApplied.forEach((loanApplication) => {\r\n        if (loanApplication.LoanApplicationId === this.loanApplication.LoanApplicationId)\r\n          loanApplication.Status = this.loanApplication.Status;\r\n        if (this.isApproveButtonDisable && this.loanApplication.Status == \"Approved\") {\r\n          loanApplication.IsApprovedDisabled = true;\r\n          loanApplication.IsRejectedDisabled = true;\r\n        }\r\n        if (this.isRejectButtonDisable && this.loanApplication.Status == \"Rejected\")\r\n          loanApplication.IsRejectedDisabled = true;\r\n        if (this.loanApplication.Status == \"InProgress\") {\r\n          loanApplication.IsApprovedDisabled = false;\r\n          loanApplication.IsRejectedDisabled = false;\r\n        }\r\n      });\r\n      this.loansApplied = this.loansApplied.slice();\r\n    }\r\n  }\r\n}\r\n","import { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nexport class LoanApplication {\r\n    LoanApplicationId: number = 0;\r\n    CustomerName: string = null;\r\n    LoanAmount: number = null;\r\n    ApplicationDate: string = null;\r\n    LoanPeriod: number = null;\r\n    Email: string = \"\";\r\n    Contact: string = null;\r\n    Status: string = \"\";\r\n    CreatedBy: number = null;\r\n    CreatedOn: string = null;\r\n    ModifiedBy: number = null;\r\n    ModifiedOn: string = null;\r\n    IsActive: boolean = true;\r\n    Address: string = null;\r\n    IsApprovedDisabled: boolean = false;\r\n    IsRejectedDisabled: boolean = false;\r\n    LoanValidator: FormGroup = null;\r\n    constructor() {\r\n        var _formBuilder = new FormBuilder();\r\n        this.LoanValidator = _formBuilder.group({\r\n            'CustomerName': ['', Validators.compose([Validators.required])],\r\n            'LoanAmount': ['', Validators.compose([Validators.required, this.positiveNumberValdiator])],\r\n            'LoanPeriod': ['', Validators.compose([Validators.required, this.positiveNumberValdiator])],\r\n            'Email': ['', Validators.compose([Validators.required])],\r\n            'Contact': ['', Validators.compose([Validators.required])]\r\n        });\r\n    }\r\n    public IsDirty(fieldName): boolean {\r\n        if (fieldName == undefined)\r\n            return this.LoanValidator.dirty;\r\n        else\r\n            return this.LoanValidator.controls[fieldName].dirty;\r\n    }\r\n    public IsValid(): boolean { if (this.LoanValidator.valid) { return true; } else { return false; } } public IsValidCheck(fieldName, validator): boolean {\r\n        if (fieldName == undefined) {\r\n            return this.LoanValidator.valid;\r\n        }\r\n        else\r\n            return !(this.LoanValidator.hasError(validator, fieldName));\r\n    }\r\n    positiveNumberValdiator(control: FormControl): { [key: string]: boolean } {\r\n        if (control) {\r\n            if (control.value < 0)\r\n                return { 'positivenum': true };\r\n        }\r\n    }\r\n\r\n}","export class Role {\r\n    RoleId: number = 0;\r\n    RoleName: string = null;\r\n    RoleDescription: string = null;\r\n    IsSysAdmin: boolean = false;\r\n    IsActive: boolean = true;\r\n    CreatedBy: number = null;\r\n    CreatedOn: string = null;\r\n    ModifiedBy: number = null;\r\n    ModifiedOn: string = null;\r\n    RoleType: string = null;\r\n    UserName: string = null;\r\n\r\n\r\n\r\n}","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nexport class User_Credential {\r\n    public UserId: number = 0;\r\n    public UserName: string = null;\r\n    public Password: string = null;\r\n    public Email: string = null;\r\n    public CreatedBy: number = null;\r\n    public CreatedOn: string = null;\r\n    public ModifiedOn: string = null;\r\n    public ModifiedBy: number = null;\r\n    public IsActive: Boolean = true;\r\n    public Contact: string = null;\r\n    public Name: string = null;\r\n    public Address: string = null;\r\n    public userValidator: FormGroup = null;\r\n    //Reactive Form Validation\r\n    constructor() {\r\n        var _formBuilder = new FormBuilder();\r\n        this.userValidator = _formBuilder.group({\r\n            'UserName': ['', Validators.compose([Validators.required])],\r\n            'Password': ['', Validators.compose([Validators.required])],\r\n        });\r\n    }\r\n    public IsDirty(fieldName): boolean {\r\n        if (fieldName == undefined)\r\n            return this.userValidator.dirty;\r\n        else\r\n            return this.userValidator.controls[fieldName].dirty;\r\n    }\r\n    public IsValid(): boolean { if (this.userValidator.valid) { return true; } else { return false; } } public IsValidCheck(fieldName, validator): boolean {\r\n        if (fieldName == undefined) {\r\n            return this.userValidator.valid;\r\n        }\r\n        else\r\n            return !(this.userValidator.hasError(validator, fieldName));\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\n// import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\n\r\n@Injectable()\r\nexport class LoanService {\r\n    // public hubConnectionBuilder: HubConnection;\r\n    offers: any[] = [];\r\n    public RoleName: string = null;\r\n    public UserName: string = null;\r\n    constructor() {\r\n    }\r\n    // LoanServiceNotification(): any {\r\n    //     this.hubConnectionBuilder = new HubConnectionBuilder()\r\n    //         .withUrl('https://localhost:44325/api/MessageHub/Notification')\r\n    //         .configureLogging(LogLevel.Information)\r\n    //         .build();\r\n    //     this.hubConnectionBuilder\r\n    //         .start()\r\n    //         .then(() => console.log('Connection started.......!'))\r\n    //         .catch(err => console.log('Error while connect with server'));\r\n    //     this.hubConnectionBuilder.on('SendOffersToUser', (result: any) => {\r\n    //         this.offers.push(result);\r\n    //     });\r\n    //     return this.offers;\r\n\r\n    // }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { LoanDlService } from \"./loan.dl.service\";\r\nimport { map } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { LoanApplication } from \"../Model/LoanApplication.model\";\r\n\r\n@Injectable()\r\nexport class LoanBLService {\r\n\r\n    constructor(public loanDlService: LoanDlService) {\r\n        this.getUsersList()\r\n    }\r\n    public PostLoan(loanApplied: LoanApplication) {\r\n        var loan = _.omit(loanApplied, ['LoanValidator']);\r\n        return this.loanDlService.postLoanApplied(loan)\r\n            .pipe(\r\n                map(res => { return res }));\r\n    }\r\n\r\n    public getUsersList() {\r\n        return this.loanDlService.getUserList().pipe(map((responseData) => {\r\n            return responseData;\r\n        }));\r\n    }\r\n    public getUserRoleByUserId(userId: number) {\r\n        return this.loanDlService.getRoleByUserId(userId).pipe(map((responseData) => {\r\n            return responseData;\r\n        }));\r\n    }\r\n    public getAllLoansApplications() {\r\n        return this.loanDlService.getAllLoanApplications().pipe(map((responseData) => {\r\n            return responseData;\r\n        }));\r\n    }\r\n    public approveApplication(UserId: number, LoanApplicationId: number) {\r\n        return this.loanDlService.updateApplicationStatus(UserId, LoanApplicationId).pipe(map((responseData) => {\r\n            return responseData;\r\n        }));\r\n    }\r\n    public rejectApplication(UserId: number, LoanApplicationId: number) {\r\n        return this.loanDlService.rejectApplication(UserId, LoanApplicationId).pipe(map((responseData) => {\r\n            return responseData;\r\n        }));\r\n    }\r\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Loan } from \"../Model/Loan.model\";\r\nimport { LoanApplication } from \"../Model/LoanApplication.model\";\r\n\r\n@Injectable()\r\nexport class LoanDlService {\r\n\r\n    public options = { headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' }) };\r\n    public optionJson = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    baseUrl: string;\r\n    constructor(public http: HttpClient) {\r\n        this.baseUrl = '/api/Loan';\r\n\r\n    }\r\n    public postLoanApplied(loanApplied: LoanApplication) {\r\n        try {\r\n            return this.http.post<any>(`${this.baseUrl}/LoanApplied`, loanApplied, this.optionJson);\r\n        } catch (ex) {\r\n            throw ex;\r\n        }\r\n    }\r\n    public getUserList() {\r\n        return this.http.get<any>(`${this.baseUrl}/UsersList`);\r\n    }\r\n    public getRoleByUserId(userId: number) {\r\n        return this.http.get<any>(`${this.baseUrl}/RoleByUserId?UserId=${userId}`);\r\n    }\r\n    public getAllLoanApplications() {\r\n        return this.http.get<any>(`${this.baseUrl}/LoanApplications`);\r\n    }\r\n    public updateApplicationStatus(UserId: number, LoanApplicationId: number) {\r\n        try {\r\n            return this.http.put<any>(`${this.baseUrl}/ApproveLoanApplication?UserId=${UserId}&LoanApplicationId=${LoanApplicationId}`, this.optionJson);\r\n        }\r\n        catch (ex) {\r\n            throw ex;\r\n        }\r\n    }\r\n    public rejectApplication(UserId: number, LoanApplicationId: number) {\r\n        try {\r\n            return this.http.put<any>(`${this.baseUrl}/RejectLoanApplication?UserId=${UserId}&LoanApplicationId=${LoanApplicationId}`, this.optionJson);\r\n        } catch (ex) {\r\n            throw ex;\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  offers: any[] = [];\r\n  constructor() {\r\n  }\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoanAppliedListComponent } from './LoanAppliedList/Loan-Applied-list.component';\r\nimport { LoanBLService } from './Services/loan.bl.service';\r\nimport { LoanDlService } from './Services/loan.dl.service';\r\nimport { loginComponent } from './login/login.component';\r\nimport { LoanService } from './Services/loan-service';\r\nimport { LoanApplicationFormComponent } from './LoanApplicationForm/loan-application-form.component';\r\n\r\n@NgModule({\r\n  providers: [\r\n    LoanBLService,\r\n    LoanDlService,\r\n    LoanService\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoanAppliedListComponent,\r\n    loginComponent,\r\n    LoanApplicationFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: loginComponent, pathMatch: 'full' },\r\n      { path: 'Home', component: HomeComponent },\r\n    ])\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\nimport { LoanBLService } from '../Services/loan.bl.service';\r\nimport { LoanService } from '../Services/loan-service';\r\nimport { Role } from '../Model/Role.model';\r\nimport { ENUM_Role } from '../ENUM/shared_enum';\r\nimport { User_Credential } from '../Model/User.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  client_enum: string = ENUM_Role.Client;\r\n  admin_enum: string = ENUM_Role.Admin;\r\n  user: User_Credential = new User_Credential();\r\n  role: Role = new Role();\r\n  constructor(public loanBlService: LoanBLService, public loanService: LoanService) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.user.UserName = this.loanService.UserName;\r\n    this.role.RoleName = this.loanService.RoleName;\r\n  }\r\n  ngOnDestroy() {\r\n    this.loanService.RoleName = null;\r\n    this.loanService.UserName = null;\r\n  }\r\n  // PostLoan() {\r\n  //   for (var i in this.loanData.LoanValidator.controls) {\r\n  //     this.loanData.LoanValidator.controls[i].markAsDirty();\r\n  //     this.loanData.LoanValidator.controls[i].updateValueAndValidity();\r\n  //   }\r\n  //   if (this.loanData.IsValidCheck(undefined, undefined)) {\r\n  //     this.loanBlService.PostLoan(this.loanData)\r\n  //       .subscribe(res => {\r\n  //         if (res.Status == 'OK') {\r\n  //           alert('Loan Applied Successfully');\r\n  //           this.loanData = new Loan();\r\n  //         }\r\n  //         else {\r\n  //           alert('Sorry! Loan Applied failed');\r\n  //         }\r\n  //       });\r\n  //   }\r\n  // }\r\n\r\n}\r\n\r\n\r\n","import { Component } from \"@angular/core\";\r\nimport { LoanBLService } from \"../Services/loan.bl.service\";\r\nimport { User_Credential } from \"../Model/User.model\";\r\nimport { LoanService } from \"../Services/loan-service\";\r\nimport { Role } from \"../Model/Role.model\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html'\r\n})\r\nexport class loginComponent {\r\n    users: Array<User_Credential> = new Array();\r\n    user: User_Credential = new User_Credential();\r\n    userCredential: User_Credential = new User_Credential();\r\n    role: Role = new Role();\r\n\r\n    constructor(public loanBlService: LoanBLService, public router: Router, public loanService: LoanService\r\n    ) {\r\n        this.getUsersList();\r\n    }\r\n    public getUsersList() {\r\n        this.loanBlService.getUsersList().subscribe(res => {\r\n            if (res.Status == 'OK') {\r\n                this.users = res.Results;\r\n                // console.log(this.loanService.LoanServiceNotification());\r\n            }\r\n        });\r\n    }\r\n    public PostLoginForm() {\r\n        for (var i in this.user.userValidator.controls) {\r\n            this.user.userValidator.controls[i].markAsDirty();\r\n            this.user.userValidator.controls[i].updateValueAndValidity();\r\n        }\r\n        if (!this.user.IsValidCheck(undefined, undefined)) {\r\n            return;\r\n        }\r\n        const { UserName, Password } = this.user;\r\n        if (!UserName || !Password) {\r\n            this.displayErrorMessage(\"Please Enter UserName and Password\");\r\n            return;\r\n        }\r\n        const trimmedUserName = UserName.trim();\r\n        const trimmedPassword = Password.trim();\r\n\r\n        if (!trimmedUserName || !trimmedPassword) {\r\n            this.displayErrorMessage(\"Cannot Enter White Space\");\r\n            return;\r\n        }\r\n        if (!this.users) {\r\n            this.displayErrorMessage(\"Invalid Credentials\");\r\n            return;\r\n        }\r\n        const userCredential = this.users.find((e) => e.UserName === trimmedUserName && e.Password === trimmedPassword);\r\n        if (userCredential) {\r\n            this.loanBlService.getUserRoleByUserId(userCredential.UserId).subscribe((res) => {\r\n                if (res.Status === 'OK') {\r\n                    this.role = res.Results;\r\n                    this.SetUserIdToLocalStorage(userCredential);\r\n                    this.UserRoleHandler(this.role);\r\n                }\r\n            });\r\n        } else {\r\n            this.displayErrorMessage(\"Invalid Credentials\");\r\n        }\r\n    }\r\n    // Helper function to display error messages\r\n    private displayErrorMessage(message: string): void {\r\n        alert(message);\r\n    }\r\n    UserRoleHandler(role: Role) {\r\n        this.loanService.RoleName = role.RoleName;\r\n        this.loanService.UserName = role.UserName;\r\n        if (role.RoleName == \"Admin\") {\r\n            this.router.navigate([\"/Home\"]);\r\n\r\n        }\r\n        if (role.RoleName == \"Client\") {\r\n            this.router.navigate([\"/Home\"]);\r\n        }\r\n    }\r\n//     To get the UserId of current LoggedIn User without each time accessing the userid So this method \r\n//     is called each time when user is loggedin and can be accessed from any component\r\n    SetUserIdToLocalStorage(userDetail: User_Credential) {\r\n        localStorage.setItem('UserId', userDetail.UserId.toString());\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}